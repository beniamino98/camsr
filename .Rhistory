system(paste0("mkdir ", private$dir_db, "/l1"))
system(paste0("mkdir ", private$dir_l0))
system(paste0("mkdir ", private$dir_l1))
}
if (init_locations) {
locations <- init_CAMS_locations()
readr::write_csv(locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(locations, file = paste0(private$dir_l1, "/0-locations.csv"))
} else {
locations <- readr::read_csv(file = paste0(private$dir_l1, "/0-locations.csv"),
show_col_types = FALSE, progress = FALSE)
}
private$..locations <- locations
},
# Add the coordinates and the label for a new location
add = function(place, lat, lon, alt){
new_loc <- tibble(place = place, lat = lat, lon = lon, alt = alt,
from = as_date(NA), to = as_date(NA), nobs = 0)
private$..locations <- bind_rows(private$..locations, new_loc)
readr::write_csv(private$..locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(private$..locations, file = paste0(private$dir_l1, "/0-locations.csv"))
},
# Download the raw data from CAMS
download = function(place, from = "2005-01-01", to = Sys.Date()){
to <- as.character(to)
from <- as.character(from)
lat <- private$..locations[private$..locations$place == place,]$lat
lon <- private$..locations[private$..locations$place == place,]$lon
alt <- private$..locations[private$..locations$place == place,]$alt
# File Name in Temp (as csv file)
filename <- paste0(place, ".csv")
# Download the file
cams_solar_radiation_ts(latitude = lat,
longitude = lon,
start = from,
end = to,
altitude = alt,
filename = file.path(private$dir_l0, filename))
private$..locations[private$..locations$place == place,]$from <- as.Date(from)
private$..locations[private$..locations$place == place,]$to <- as.Date(to)
readr::write_csv(private$..locations, file = paste0(private$dir_l0, "/0-locations.csv"))
},
# Read and process raw data from l0 to l1
process_l0_to_l1 = function(place, save = TRUE){
filename <- paste0(place, ".csv")
filepath <- file.path(private$dir_l0, filename)
# Metadata
meta <- readr::read_delim(filepath,  skip = 0, n_max = 40, delim = ":", show_col_types = FALSE, progress = FALSE)
# Solar data
data <- readr::read_delim(filepath, skip = 42, delim = ";", show_col_types = FALSE, progress = FALSE)
# Process data and metadata into a unique dataset
data <- cams_solar_radiation_process_l0_to_l1(place = place, data = data, meta = meta)
# Save files
if (save) readr::write_csv(data, file = file.path(private$dir_l1, filename))
private$..locations[private$..locations$place == place,]$from <- min(as.Date(data$date))
private$..locations[private$..locations$place == place,]$to <- max(as.Date(data$date))
private$..locations[private$..locations$place == place,]$nobs <- nrow(data)
readr::write_csv(private$..locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(private$..locations, file = paste0(private$dir_l1, "/0-locations.csv"))
return(data)
},
# Retrieve and process data from l1
read = function(place, year_max = lubridate::year(Sys.Date()),
from = NULL, to = NULL, scale_GHI = 1000){
filename <- paste0(place, ".csv")
filepath <- file.path(private$dir_l1, filename)
# Solar data
data <- readr::read_csv(filepath, show_col_types = FALSE, progress = FALSE)
data$place <- place
data <- cams_solar_radiation_read(data, year_max = year_max, from = from, to = to, scale_GHI = scale_GHI)
return(data)
},
# Get processed CAMS data without downloading and storing files
get = cams_solar_radiation_ts_download
),
private = list(
dir_db = NA,
dir_l0 = NA,
dir_l1 = NA,
..locations = NA
),
active = list(
#' @field locations
#' Get all streams
locations = function(){
private$..locations
}
)
)
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = FALSE, init_locations = FALSE)
cams$locations
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
cams$download("Riccione")
cams$process_l0_to_l1("Riccione")
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation.R")
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation.R")
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = FALSE, init_locations = FALSE)
cams$locations
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
cams$download("Riccione")
cams$locations
cams_solar_radiation <- R6::R6Class("cams_solar_radiation",
public = list(
initialize = function(dir_db = "databases/CAMS",
dir_l0 = "l0/solar",
dir_l1 = "l1/solar",
init_db = FALSE,
init_locations = FALSE){
private$dir_db <- dir_db
private$dir_l0 <- file.path(dir_db, dir_l0)
private$dir_l1 <- file.path(dir_db, dir_l1)
private$..locations <- init_CAMS_locations()
if (init_db) {
system(paste0("mkdir ", private$dir_db))
system(paste0("mkdir ", private$dir_db, "/l0"))
system(paste0("mkdir ", private$dir_db, "/l1"))
system(paste0("mkdir ", private$dir_l0))
system(paste0("mkdir ", private$dir_l1))
}
if (init_locations) {
locations <- init_CAMS_locations()
readr::write_csv(locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(locations, file = paste0(private$dir_l1, "/0-locations.csv"))
} else {
locations <- readr::read_csv(file = paste0(private$dir_l1, "/0-locations.csv"),
show_col_types = FALSE, progress = FALSE)
}
private$..locations <- locations
},
# Add the coordinates and the label for a new location
add = function(place, lat, lon, alt){
if (!(place %in% private$..locations$place)){
new_loc <- tibble(place = place, lat = lat, lon = lon, alt = alt,
from = as_date(NA), to = as_date(NA), nobs = 0)
private$..locations <- bind_rows(private$..locations, new_loc)
readr::write_csv(private$..locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(private$..locations, file = paste0(private$dir_l1, "/0-locations.csv"))
} else {
warning(paste0("Location ", place, " altready added! run the method `$locations`"))
}
},
# Download the raw data from CAMS
download = function(place, from = "2005-01-01", to = Sys.Date()){
to <- as.character(to)
from <- as.character(from)
lat <- private$..locations[private$..locations$place == place,]$lat
lon <- private$..locations[private$..locations$place == place,]$lon
alt <- private$..locations[private$..locations$place == place,]$alt
# File Name in Temp (as csv file)
filename <- paste0(place, ".csv")
filepath <- file.path(private$dir_l0, filename)
# Download the file
cams_solar_radiation_ts(latitude = lat,
longitude = lon,
start = from,
end = to,
altitude = alt,
filename = filepath)
filepath <- file.path(private$dir_l0, filename)
# Metadata
meta <- readr::read_delim(filepath,  skip = 0, n_max = 40, delim = ":",
show_col_types = FALSE, progress = FALSE)
readr::write_csv(meta, file = paste0(private$dir_l0, "/metadata/", filename))
# Solar data
data <- readr::read_delim(filepath, skip = 42, delim = ";", show_col_types = FALSE, progress = FALSE)
readr::write_csv(data, file = filepath)
},
# Read and process raw data from l0 to l1
process_l0_to_l1 = function(place, save = TRUE){
filename <- paste0(place, ".csv")
filepath <- file.path(private$dir_l0, filename)
filepath_meta <- file.path(private$dir_l0, "metadata", filename)
# Metadata
meta <- readr::read_delim(filepath_meta, delim = ":", show_col_types = FALSE, progress = FALSE)
# Solar data
data <- readr::read_delim(filepath, delim = ";", show_col_types = FALSE, progress = FALSE)
# Process data and metadata into a unique dataset
data <- cams_solar_radiation_process_l0_to_l1(place = place, data = data, meta = meta)
# Save files
if (save) readr::write_csv(data, file = file.path(private$dir_l1, filename))
private$..locations[private$..locations$place == place,]$from <- min(as.Date(data$date))
private$..locations[private$..locations$place == place,]$to <- max(as.Date(data$date))
private$..locations[private$..locations$place == place,]$nobs <- nrow(data)
readr::write_csv(private$..locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(private$..locations, file = paste0(private$dir_l1, "/0-locations.csv"))
return(data)
},
# Retrieve and process data from l1
read = function(place, year_max = lubridate::year(Sys.Date()),
from = NULL, to = NULL, scale_GHI = 1000){
filename <- paste0(place, ".csv")
filepath <- file.path(private$dir_l1, filename)
# Solar data
data <- readr::read_csv(filepath, show_col_types = FALSE, progress = FALSE)
data$place <- place
data <- cams_solar_radiation_read(data, year_max = year_max, from = from, to = to, scale_GHI = scale_GHI)
return(data)
},
# Get processed CAMS data without downloading and storing files
get = cams_solar_radiation_ts_download
),
private = list(
dir_db = NA,
dir_l0 = NA,
dir_l1 = NA,
..locations = NA
),
active = list(
#' @field locations
#' Get all streams
locations = function(){
private$..locations
}
)
)
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = FALSE, init_locations = FALSE)
cams$locations
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
cams$locations[-1,]
cams$locations[-length(cams$locations$place),]
cams$.__enclos_env__$private$..locations <- cams$locations[-length(cams$locations$place),]
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
cams$download("Riccione")
cams$process_l0_to_l1("Riccione")
library(readr)
Riccione <- read_csv("~/Documents/University/PhD/Projects/solar-project/databases/CAMS/l0/solar/metadata/Riccione.csv")
View(Riccione)
Riccione
meta[9:14, 2]
Riccione[9:14, 2]
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation.R")
cams$process_l0_to_l1("Riccione")
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = FALSE, init_locations = FALSE)
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
cams$process_l0_to_l1("Riccione")
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
cams$download("Riccione")
cams$locations
cams$.__enclos_env__$private$..locations <- cams$locations[-19,]
cams$download("Riccione")
cams$process_l0_to_l1("Riccione")
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation_internals.R")
View(Riccione)
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation_internals.R")
cams$process_l0_to_l1("Riccione")
CAMS_data <- list()
for(place in cams$locations$place){
df <- cams$locations[cams$locations$place == place,]
place <- df$place[i]
lat <- df$lat[i]
lon <- df$lon[i]
alt <- df$alt[i]
cams$download(place = place, lat = lat , lon = lon, alt = alt, from = "2005-01-01", to = Sys.Date())
cams$process_l0_to_l1(place)
CAMS_data[[place]] <- cams$read(place)
}
CAMS_data <- list()
for(place in cams$locations$place){
df <- cams$locations[cams$locations$place == place,]
place <- df$place[i]
lat <- df$lat[i]
lon <- df$lon[i]
alt <- df$alt[i]
cams$download(place = place, from = "2005-01-01", to = Sys.Date())
cams$process_l0_to_l1(place)
CAMS_data[[place]] <- cams$read(place)
}
df
cams$download
CAMS_data <- list()
for(place in cams$locations$place){
df <- cams$locations[cams$locations$place == place,]
place <- df$place[i]
lat <- df$lat[i]
lon <- df$lon[i]
alt <- df$alt[i]
cams$download(place = place, from = "2005-01-01", to = Sys.Date())
cams$process_l0_to_l1(place)
CAMS_data[[place]] <- cams$read(place)
}
cams$locations
cams$process_l0_to_l1("Riccione")
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = FALSE, init_locations = FALSE)
cams$locations
#cams$.__enclos_env__$private$..locations <- cams$locations[-19,]
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
CAMS_data <- list()
place <- "Bologna"
df <- cams$locations[cams$locations$place == place,]
place <- df$place[i]
lat <- df$lat[i]
lon <- df$lon[i]
CAMS_data <- list()
for(place in cams$locations$place){
df <- cams$locations[cams$locations$place == place,]
place <- df$place[1]
lat <- df$lat[1]
lon <- df$lon[1]
alt <- df$alt[1]
cams$download(place = place)
cams$process_l0_to_l1(place)
CAMS_data[[place]] <- cams$read(place)
}
cams_solar_radiation <- R6::R6Class("cams_solar_radiation",
public = list(
initialize = function(dir_db = "databases/CAMS",
dir_l0 = "l0/solar",
dir_l1 = "l1/solar",
init_db = FALSE,
init_locations = FALSE){
private$dir_db <- dir_db
private$dir_l0 <- file.path(dir_db, dir_l0)
private$dir_l1 <- file.path(dir_db, dir_l1)
private$..locations <- init_CAMS_locations()
if (init_db) {
system(paste0("mkdir ", private$dir_db))
system(paste0("mkdir ", private$dir_db, "/l0"))
system(paste0("mkdir ", private$dir_db, "/l1"))
system(paste0("mkdir ", private$dir_l0))
system(paste0("mkdir ", private$dir_l1))
}
if (init_locations) {
locations <- init_CAMS_locations()
readr::write_csv(locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(locations, file = paste0(private$dir_l1, "/0-locations.csv"))
} else {
locations <- readr::read_csv(file = paste0(private$dir_l1, "/0-locations.csv"),
show_col_types = FALSE, progress = FALSE)
}
private$..locations <- locations
},
# Add the coordinates and the label for a new location
add = function(place, lat, lon, alt){
if (!(place %in% private$..locations$place)){
new_loc <- tibble(place = place, lat = lat, lon = lon, alt = alt,
from = as_date(NA), to = as_date(NA), nobs = 0)
private$..locations <- bind_rows(private$..locations, new_loc)
readr::write_csv(private$..locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(private$..locations, file = paste0(private$dir_l1, "/0-locations.csv"))
} else {
warning(paste0("Location ", place, " altready added! run the method `$locations`"))
}
},
# Download the raw data from CAMS
download = function(place, from = "2005-01-01", to = Sys.Date()){
to <- as.character(to)
from <- as.character(from)
lat <- private$..locations[private$..locations$place == place,]$lat
lon <- private$..locations[private$..locations$place == place,]$lon
alt <- private$..locations[private$..locations$place == place,]$alt
# File Name in Temp (as csv file)
filename <- paste0(place, ".csv")
filepath <- file.path(private$dir_l0, filename)
# Download the file
cams_solar_radiation_ts(latitude = lat,
longitude = lon,
start = from,
end = to,
altitude = alt,
filename = filepath)
filepath <- file.path(private$dir_l0, filename)
# Metadata
meta <- readr::read_delim(filepath,  skip = 0, n_max = 40, delim = ":",
show_col_types = FALSE, progress = FALSE)
readr::write_csv(meta, file = paste0(private$dir_l0, "/metadata/", filename))
# Solar data
data <- readr::read_delim(filepath, skip = 42, delim = ";", show_col_types = FALSE, progress = FALSE)
readr::write_csv(data, file = filepath)
},
# Read and process raw data from l0 to l1
process_l0_to_l1 = function(place, save = TRUE){
filename <- paste0(place, ".csv")
filepath <- file.path(private$dir_l0, filename)
filepath_meta <- file.path(private$dir_l0, "metadata", filename)
# Metadata
meta <- readr::read_csv(filepath_meta, show_col_types = FALSE, progress = FALSE)
# Solar data
data <- readr::read_csv(filepath, show_col_types = FALSE, progress = FALSE)
# Process data and metadata into a unique dataset
data <- cams_solar_radiation_process_l0_to_l1(place = place, data = data, meta = meta)
# Save files
if (save) readr::write_csv(data, file = file.path(private$dir_l1, filename))
private$..locations[private$..locations$place == place,]$from <- min(as.Date(data$date))
private$..locations[private$..locations$place == place,]$to <- max(as.Date(data$date))
private$..locations[private$..locations$place == place,]$nobs <- nrow(data)
readr::write_csv(private$..locations, file = paste0(private$dir_l0, "/0-locations.csv"))
readr::write_csv(private$..locations, file = paste0(private$dir_l1, "/0-locations.csv"))
return(data)
},
# Retrieve and process data from l1
read = function(place, year_max = lubridate::year(Sys.Date()),
from = NULL, to = NULL, scale_GHI = 1000){
filename <- paste0(place, ".csv")
filepath <- file.path(private$dir_l1, filename)
# Solar data
data <- readr::read_csv(filepath, show_col_types = FALSE, progress = FALSE)
data$place <- place
data <- cams_solar_radiation_read(data, year_max = year_max, from = from, to = to, scale_GHI = scale_GHI)
return(data)
},
# Get processed CAMS data without downloading and storing files
get = cams_solar_radiation_ts_download,
# Update data for a specific location
update = function(place){
lat <- private$..locations[private$..locations$place == place,]$lat
lon <- private$..locations[private$..locations$place == place,]$lon
alt <- private$..locations[private$..locations$place == place,]$alt
from <- private$..locations[private$..locations$place == place,]$to
to <- as.character(Sys.Date())
# File Name in Temp (as csv file)
filename <- paste0(place, ".csv")
# Create in a temporary directory a temporary file csv
temp <- base::tempfile(pattern = place, fileext = ".csv")
# Download the file
cams_solar_radiation_ts(latitude = lat,
longitude = lon,
start = from,
end = to,
altitude = alt,
filename = temp)
# Solar data
filepath <- file.path(private$dir_l0, filename)
new_data <- readr::read_delim(temp, skip = 42, delim = ";", show_col_types = FALSE, progress = FALSE)
old_data <- readr::read_csv(file = filepath, show_col_types = FALSE, progress = FALSE)
upd_data <- bind_rows(old_data, new_data)
upd_data <- upd_data[!duplicated(upd_data[,1]),]
readr::write_csv(upd_data, file = filepath)
unlink(temp)
}
),
private = list(
dir_db = NA,
dir_l0 = NA,
dir_l1 = NA,
..locations = NA
),
active = list(
#' @field locations
#' Get all streams
locations = function(){
private$..locations
}
)
)
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = FALSE, init_locations = FALSE)
cams$locations
cams$update("Riccione")
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation.R")
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = FALSE, init_locations = FALSE)
cams$locations
cams$update("Riccione")
# Initialize CAMS solar radiation database
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = TRUE, init_locations = TRUE)
cams$locations
# Add and process data for all the locations
CAMS_data <- list()
# Add and process data for all the locations
for(place in cams$locations$place){
df <- cams$locations[cams$locations$place == place,]
place <- df$place[1]
lat <- df$lat[1]
lon <- df$lon[1]
alt <- df$alt[1]
cams$download(place = place)
cams$process_l0_to_l1(place)
}
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation.R")
# Initialize CAMS solar radiation database
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = TRUE, init_locations = TRUE)
cams$locations
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation.R")
# Initialize CAMS solar radiation database
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = TRUE, init_locations = TRUE)
cams$locations
# Add and process data for all the locations
for(place in cams$locations$place){
df <- cams$locations[cams$locations$place == place,]
place <- df$place[1]
lat <- df$lat[1]
lon <- df$lon[1]
alt <- df$alt[1]
cams$download(place = place)
cams$process_l0_to_l1(place)
}
# Once the database is updated it is possible to recall it
cams <- cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = FALSE, init_locations = FALSE)
cams$locations
# Add a new location
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
cams$download("Riccione")
cams$process_l0_to_l1("Riccione")
# Add a new location
cams$add("Riccione", lat = 43.9927, lon = 12.6623, alt = 12)
rm(list = ls())
devtools::document()
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation.R")
source("~/Documents/University/PhD/Projects/solar-project/R/camsr/R/cams_solar_radiation.R")
library(camsr)
rm(list = ls())
devtools::document()
devtools::document()
devtools::document()
library(camsr)
library(camsr)
camsr::cams_solar_radiation$new()
devtools::document()
devtools::document()
library(camsr)
cams_solar_radiation$new(init_db = F, init_locations = F)
cams_solar_radiation$new(db_dir = "../../databases/CAMS", init_db = F, init_locations = F)
cams_solar_radiation$new(dir_db = "../../databases/CAMS", init_db = F, init_locations = F)
library(camsr)
